<div class="container">
  {{#if rawdata}}
  <div class="mt-2">
    <button class="btn btn-default btn-small mb-2" onclick="toggleStats()">Statistics (herein resides foul language of the most detestable sort)</button>
    <div id="chartcontainer">
      <div id="wordscontainer" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
      <div id="snitchescontainer" style="min-width: 310px; height: 300px; margin: 0 auto"></div>
  </div>
  </div>
  {{/if}}
  <div class="card mt-2">
    <div class="card-body">
      <h2>
        Scoreboard
        <span style="float: right;" class="small">(<span onload="getUsername()" id="username" class="small">N/A</span> <a class="small" href="javascript:void(0)" onclick="setUsername()">Edit</a>)</span>
      </h2>
      {{#if rawdata}}
      <table class="table">
        <thead>
          <tr>
            <th scope="col">Name</th>
            <th scope="col">Score</th>
            <th scope="col" colspan="90"></th>
          </tr>
        </thead>
        <tbody>
          {{#each rawdata}}
              <tr>
                <td>{{this.name}}</td>
                <td><a href="javascript:void(0)" onclick="showDetails('{{this.name}}')">{{this.entries.length}}</a></td>
                <td><button class="btn-primary btn poeng" onclick="addPoint('{{this.name}}')">1 point</button></td>
              </tr>
              {{#if this.entries}}
              <tr class="detail" id="{{this.name}}">
                <td colspan="99">
                  <ul>
                    {{#each this.entries}}
                    <li><strong>Date:</strong> <span class="datestring">{{this.Timestamp}}</span> <strong>Snitch:</strong> {{this.Snitch}} <strong>Word:</strong> {{this.Word}}</li>
                    {{/each}}
                  </ul>
                </td>
              </tr>
              {{/if}}
          {{/each}}
        </tbody>
      </table>
      {{else}}
          <p><em>No data, set up in <a href="/admin">admin page</a></em></p>
      {{/if}}
    </div>
  </div>
</div>

<script>
function addPoint(pName) {
  vWord = prompt("What word was used?");
  if(gUsername && vWord) {
    post({name: pName, username: gUsername, word: vWord}, "/addpoint");
  } else {
    if(!gUsername) alert("Could not determine username");
    if(!vWord) alert("No word provided, will not be scored");
  }
}

function post(pContent, pUrl, pCallback) {
  $('.poeng').attr("disabled", "disabled");
  $.ajax
  ({
    url:pUrl,
    data: pContent,
    type: 'POST',
    success: function(rData)
    {
      location.reload();
    },
    error: function(xhr, ajaxOptions, thrownError)
    {
      console.log(JSON.parse(xhr.responseText));
    }
  });
}

var gUsername = null;

function getCookie(name) {
    var dc = document.cookie;
    var prefix = name + "=";
    var begin = dc.indexOf("; " + prefix);
    if (begin == -1) {
        begin = dc.indexOf(prefix);
        if (begin != 0) return null;
    }
    else
    {
        begin += 2;
        var end = document.cookie.indexOf(";", begin);
        if (end == -1) {
        end = dc.length;
        }
    }
    return decodeURI(dc.substring(begin + prefix.length, end));
}

function setUsername() {
  gUsername = prompt("Please enter your name");
  while(!gUsername) {
    gUsername = prompt("Please enter your name");
  }
  document.cookie = "username=" + gUsername + ";";
  location.reload();
}

function getUsername() {
    var myCookie = getCookie("username");

    if (myCookie == null) {
      setUsername();
    }
    else {
      gUsername = myCookie;
      $('#username').html(gUsername);
    }
}

window.onload = function(){
  $('#chartcontainer').hide(0);
  $('.detail').hide(0);
  getUsername();

  $('.datestring').each(function(index, element) {
    element.innerText = new Date(element.innerText).toDateString();
  });
}

function toggleStats() {
  if(!$('#chartcontainer').is(":visible")) {
    $('#chartcontainer').slideDown();
    gSnitchesChart.reflow()
    gWordsChart.reflow()
  } else {
    $('#chartcontainer').slideUp();
  }
}

function showDetails(pElement) {
  $('.detail').hide(0);
  $("#" + pElement).show(700);

}

var gWords = [];
var gPeopleWords = [];
var gMonths = [];
var gSnitches = [];
var gSnitchMonths = [];

loadStats({{{data}}});

function loadStats(pStats) {
  let vSnitches = {};

  for (i = 0; i < pStats.length; i++) {
    let vPerson = {};
    vPerson.name = pStats[i].name

    let vWords = {};

    for(j = 0; j < pStats[i].entries.length; j++) {
      if(gWords.indexOf(pStats[i].entries[j].Word.toLowerCase()) === -1) {
        gWords.push(pStats[i].entries[j].Word.toLowerCase());
      }

      let vDate = new Date(pStats[i].entries[j].Timestamp);
      if(gSnitchMonths.indexOf((vDate.getMonth() + 1) + "-" + vDate.getFullYear()) === -1) {
        gSnitchMonths.push((vDate.getMonth() + 1) + "-" + vDate.getFullYear());
      }

      if(vSnitches[pStats[i].entries[j].Snitch.toLowerCase()]) {
        vSnitches[pStats[i].entries[j].Snitch.toLowerCase()]++;
      } else {
        vSnitches[pStats[i].entries[j].Snitch.toLowerCase()] = 1;
      }

      if(vWords[pStats[i].entries[j].Word.toLowerCase()]) {
        vWords[pStats[i].entries[j].Word.toLowerCase()]++;
      } else {
        vWords[pStats[i].entries[j].Word.toLowerCase()] = 1;
      }
    }
    vPerson.words = vWords;
    gPeopleWords.push(vPerson);
  }

  for(var vSnitch in vSnitches) {
    gSnitches.push({name: vSnitch, data: [vSnitches[vSnitch]]});
  }

  gWords.sort();
  gWords.forEach(function(pElement, pIndex2) {
    gPeopleWords.forEach(function(pKey, pIndex) {
      if(!gPeopleWords[pIndex].data) gPeopleWords[pIndex].data = [];
      if(pKey.words[pElement]) {
        gPeopleWords[pIndex].data[pIndex2] = pKey.words[pElement];
      } else {
        gPeopleWords[pIndex].data[pIndex2] = null;
      }
    });
  });

  loadChart();
}

var gWordsChart, gSnitchesChart;

function loadChart() {
  gWordsChart = Highcharts.chart('wordscontainer', {
      chart: {
          type: 'column'
      },
      title: {
          text: ''
      },
      subtitle: {
          text: "Where's the soap?"
      },
      xAxis: {
          categories: gWords.sort()
      },
      yAxis: {
          min: 0,
          title: {
              text: 'Total swear word usage'
          },
          stackLabels: {
              enabled: true,
              style: {
                  fontWeight: 'bold',
                  color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'
              }
          }
      },
      legend: {
          align: 'center',
          x: 0,
          verticalAlign: 'bottom',
          y: 0,
          floating: false,
          backgroundColor: (Highcharts.theme && Highcharts.theme.background2) || 'white',
          borderColor: '#CCC',
          borderWidth: 1,
          shadow: false
      },
      tooltip: {
          headerFormat: '<b>{point.x}</b><br/>',
          pointFormat: '{series.name}: {point.y}<br/>Total: {point.stackTotal}'
      },
      plotOptions: {
          column: {
              stacking: 'normal',
              dataLabels: {
                  enabled: true,
                  color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'white'
              }
          }
      },
      series: gPeopleWords
  });

  gSnitchesChart = Highcharts.chart('snitchescontainer', {
      chart: {
          type: 'column'
      },
      title: {
          text: ''
      },
      subtitle: {
          text: 'Snitches get stitches'
      },
      xAxis: {
          categories: ["Snitches"]//gSnitchMonths
      },
      yAxis: {
          min: 0,
          title: {
              text: 'snitched in total'
          }
      },
      tooltip: {
        headerFormat: '<b>{point.x}</b><br/>',
        pointFormat: '{series.name}: {point.y}'
      },
      plotOptions: {
          column: {
              pointPadding: 0.2,
              borderWidth: 0
          }
      },
      series: gSnitches
  });
}

</script>
